<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven></annotation-driven>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->

	<context:component-scan
		base-package="com.company.hellospring" />
	<aop:aspectj-autoproxy />

	<!-- DataSource 설정 -->
	<beans:bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<beans:property name="driverClassName"
			value="oracle.jdbc.OracleDriver" />
		<beans:property name="url"
			value="jdbc:oracle:thin:@localhost:1521:XE" />
		<beans:property name="username" value="spring" />
		<beans:property name="password" value="spring" />
	</beans:bean>

	<!-- Spring JDBC 설정 -->
	<beans:bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<!-- Mybatis 설정 -->
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation" value="classpath:sql-map-config-spring.xml" />
		<beans:property name="mapperLocations" value="classpath:mapper/*.xml" />
	</beans:bean>
	
	<beans:bean class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg ref="sqlSession"></beans:constructor-arg>
	</beans:bean>

	<!-- Transaction 설정 -->
	<beans:bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="allPointcut" expression="execution(* com.company..*Impl.*(..))" />
		<aop:advisor pointcut-ref="allPointcut" advice-ref="txAdvice" />
	</aop:config>

	<!-- <beans:bean id="before" class="com.company.hellospring.common.BeforeAdvice" 
		/> <beans:bean id="afterReturning" class="com.company.hellospring.common.AfterReturningAdvice" 
		/> <beans:bean id="afterThrowing" class="com.company.hellospring.common.AfterThrowingAdvice" 
		/> <beans:bean id="after" class="com.company.hellospring.common.AfterAdvice" 
		/> <beans:bean id="around" class="com.company.hellospring.common.AroundAdvice" 
		/> <aop:config> <aop:pointcut expression="execution(* com.company..*Impl.*(..))" 
		id="allPointcut" /> <aop:pointcut expression="execution(* com.company..*Impl.get*(..))" 
		id="getPointcut" /> <aop:aspect ref="before"> <aop:before method="beforeLog" 
		pointcut-ref="allPointcut" /> </aop:aspect> <aop:aspect ref="afterReturning"> 
		<aop:after-returning method="afterLog" pointcut-ref="allPointcut" returning="returnObj" 
		/> </aop:aspect> <aop:aspect ref="afterThrowing"> <aop:after-throwing method="exceptionLog" 
		pointcut-ref="allPointcut" /> </aop:aspect> <aop:aspect ref="after"> <aop:after 
		method="finallyLog" pointcut-ref="allPointcut" /> </aop:aspect> <aop:aspect 
		ref="around"> <aop:around method="aroundLog" pointcut-ref="allPointcut" /> 
		</aop:aspect> </aop:config> -->

</beans:beans>
